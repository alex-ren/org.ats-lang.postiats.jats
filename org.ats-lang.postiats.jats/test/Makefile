#
#
# This Makefile is automatically generated
# from executing the following command-line:
#
# make -f Makefile.gen
#
#

######

CC=gcc -std=c99
PATSHOMEQ="$(PATSHOME)"
PATSOPT=$(PATSHOMEQ)/src/patsopt

######

all::

######

LNS=ln -s
RMF=rm -f

######

all:: acker
acker: acker.exe
acker.exe: acker_dats.c ;   $(CC) -I$(PATSHOMEQ) -I$(PATSHOMEQ)/ccomp/runtime -o $@ $<
acker_dats.c: acker.dats ;   $(PATSOPT) -IATS$(PATSHOMEQ)/contrib --output acker_dats.c --dynamic acker.dats
clean:: ; $(RMF) acker_dats.o
clean:: ; $(RMF) acker_dats.c
cleanall:: ; $(RMF) acker.exe

all:: atof
atof: atof.exe
atof.exe: atof_dats.c ;   $(CC) -I$(PATSHOMEQ) -I$(PATSHOMEQ)/ccomp/runtime -o $@ $<
atof_dats.c: atof.dats ;   $(PATSOPT) -IATS$(PATSHOMEQ)/contrib --output atof_dats.c --dynamic atof.dats
clean:: ; $(RMF) atof_dats.o
clean:: ; $(RMF) atof_dats.c
cleanall:: ; $(RMF) atof.exe

all:: atoi
atoi: atoi.exe
atoi.exe: atoi_dats.c ;   $(CC) -I$(PATSHOMEQ) -I$(PATSHOMEQ)/ccomp/runtime -o $@ $<
atoi_dats.c: atoi.dats ;   $(PATSOPT) -IATS$(PATSHOMEQ)/contrib --output atoi_dats.c --dynamic atoi.dats
clean:: ; $(RMF) atoi_dats.o
clean:: ; $(RMF) atoi_dats.c
cleanall:: ; $(RMF) atoi.exe

all:: bintree
bintree: bintree.exe
bintree.exe: bintree_dats.c ;   $(CC) -I$(PATSHOMEQ) -I$(PATSHOMEQ)/ccomp/runtime -o $@ $<
bintree_dats.c: bintree.dats ;   $(PATSOPT) -IATS$(PATSHOMEQ)/contrib --output bintree_dats.c --dynamic bintree.dats
clean:: ; $(RMF) bintree_dats.o
clean:: ; $(RMF) bintree_dats.c
cleanall:: ; $(RMF) bintree.exe

all:: extfcall
extfcall: extfcall.exe
extfcall.exe: extfcall_dats.c ;   $(CC) -I$(PATSHOMEQ) -I$(PATSHOMEQ)/ccomp/runtime -o $@ $<
extfcall_dats.c: extfcall.dats ;   $(PATSOPT) -IATS$(PATSHOMEQ)/contrib --output extfcall_dats.c --dynamic extfcall.dats
clean:: ; $(RMF) extfcall_dats.o
clean:: ; $(RMF) extfcall_dats.c
cleanall:: ; $(RMF) extfcall.exe

all:: f91
f91: f91.exe
f91.exe: f91_dats.c ;   $(CC) -I$(PATSHOMEQ) -I$(PATSHOMEQ)/ccomp/runtime -o $@ $<
f91_dats.c: f91.dats ;   $(PATSOPT) -IATS$(PATSHOMEQ)/contrib --output f91_dats.c --dynamic f91.dats
clean:: ; $(RMF) f91_dats.o
clean:: ; $(RMF) f91_dats.c
cleanall:: ; $(RMF) f91.exe

all:: fact1
fact1: fact1.exe
fact1.exe: fact1_dats.c ;   $(CC) -I$(PATSHOMEQ) -I$(PATSHOMEQ)/ccomp/runtime -o $@ $<
fact1_dats.c: fact1.dats ;   $(PATSOPT) -IATS$(PATSHOMEQ)/contrib --output fact1_dats.c --dynamic fact1.dats
clean:: ; $(RMF) fact1_dats.o
clean:: ; $(RMF) fact1_dats.c
cleanall:: ; $(RMF) fact1.exe

all:: fact2
fact2: fact2.exe
fact2.exe: fact2_dats.c ;   $(CC) -I$(PATSHOMEQ) -I$(PATSHOMEQ)/ccomp/runtime -o $@ $<
fact2_dats.c: fact2.dats ;   $(PATSOPT) -IATS$(PATSHOMEQ)/contrib --output fact2_dats.c --dynamic fact2.dats
clean:: ; $(RMF) fact2_dats.o
clean:: ; $(RMF) fact2_dats.c
cleanall:: ; $(RMF) fact2.exe

all:: fact3
fact3: fact3.exe
fact3.exe: fact3_dats.c ;   $(CC) -D_GNU_SOURCE -O2     -I$(PATSHOMEQ) -I$(PATSHOMEQ)/ccomp/runtime -DATS_MEMALLOC_LIBC -o $@ $< 
fact3_dats.c: fact3.dats ;   $(PATSOPT) -IATS$(PATSHOMEQ)/contrib --output fact3_dats.c --dynamic fact3.dats
clean:: ; $(RMF) fact3_dats.o
clean:: ; $(RMF) fact3_dats.c
cleanall:: ; $(RMF) fact3.exe

all:: fcopy
fcopy: fcopy.exe
fcopy.exe: fcopy_dats.c ;   $(CC) -I$(PATSHOMEQ) -I$(PATSHOMEQ)/ccomp/runtime -o $@ $<
fcopy_dats.c: fcopy.dats ;   $(PATSOPT) -IATS$(PATSHOMEQ)/contrib --output fcopy_dats.c --dynamic fcopy.dats
clean:: ; $(RMF) fcopy_dats.o
clean:: ; $(RMF) fcopy_dats.c
cleanall:: ; $(RMF) fcopy.exe

all:: fib1
fib1: fib1.exe
fib1.exe: fib1_dats.c ;   $(CC) -I$(PATSHOMEQ) -I$(PATSHOMEQ)/ccomp/runtime -o $@ $<
fib1_dats.c: fib1.dats ;   $(PATSOPT) -IATS$(PATSHOMEQ)/contrib --output fib1_dats.c --dynamic fib1.dats
clean:: ; $(RMF) fib1_dats.o
clean:: ; $(RMF) fib1_dats.c
cleanall:: ; $(RMF) fib1.exe

all:: fib2
fib2: fib2.exe
fib2.exe: fib2_dats.c ;   $(CC) -I$(PATSHOMEQ) -I$(PATSHOMEQ)/ccomp/runtime -o $@ $<
fib2_dats.c: fib2.dats ;   $(PATSOPT) -IATS$(PATSHOMEQ)/contrib --output fib2_dats.c --dynamic fib2.dats
clean:: ; $(RMF) fib2_dats.o
clean:: ; $(RMF) fib2_dats.c
cleanall:: ; $(RMF) fib2.exe

all:: fibmem
fibmem: fibmem.exe
fibmem.exe: fibmem_dats.c ;   $(CC) -D_GNU_SOURCE -O2     -I$(PATSHOMEQ) -I$(PATSHOMEQ)/ccomp/runtime -DATS_MEMALLOC_LIBC -o $@ $< 
fibmem_dats.c: fibmem.dats ;   $(PATSOPT) -IATS$(PATSHOMEQ)/contrib --output fibmem_dats.c --dynamic fibmem.dats
clean:: ; $(RMF) fibmem_dats.o
clean:: ; $(RMF) fibmem_dats.c
cleanall:: ; $(RMF) fibmem.exe

all:: fprtuple
fprtuple: fprtuple.exe
fprtuple.exe: fprtuple_dats.c ;   $(CC) -I$(PATSHOMEQ) -I$(PATSHOMEQ)/ccomp/runtime -o $@ $<
fprtuple_dats.c: fprtuple.dats ;   $(PATSOPT) -IATS$(PATSHOMEQ)/contrib --output fprtuple_dats.c --dynamic fprtuple.dats
clean:: ; $(RMF) fprtuple_dats.o
clean:: ; $(RMF) fprtuple_dats.c
cleanall:: ; $(RMF) fprtuple.exe

all:: hello
hello: hello.exe
hello.exe: hello_dats.c ;   $(CC) -I$(PATSHOMEQ) -I$(PATSHOMEQ)/ccomp/runtime -o $@ $<
hello_dats.c: hello.dats ;   $(PATSOPT) -IATS$(PATSHOMEQ)/contrib --output hello_dats.c --dynamic hello.dats
clean:: ; $(RMF) hello_dats.o
clean:: ; $(RMF) hello_dats.c
cleanall:: ; $(RMF) hello.exe

all:: intecho
intecho: intecho.exe
intecho.exe: intecho_dats.c ;   $(CC) -I$(PATSHOMEQ) -I$(PATSHOMEQ)/ccomp/runtime -o $@ $<
intecho_dats.c: intecho.dats ;   $(PATSOPT) -IATS$(PATSHOMEQ)/contrib --output intecho_dats.c --dynamic intecho.dats
clean:: ; $(RMF) intecho_dats.o
clean:: ; $(RMF) intecho_dats.c
cleanall:: ; $(RMF) intecho.exe

all:: intrange
intrange: intrange.exe
intrange.exe: intrange_dats.c ;   $(CC) -I$(PATSHOMEQ) -I$(PATSHOMEQ)/ccomp/runtime -o $@ $<
intrange_dats.c: intrange.dats ;   $(PATSOPT) -IATS$(PATSHOMEQ)/contrib --output intrange_dats.c --dynamic intrange.dats
clean:: ; $(RMF) intrange_dats.o
clean:: ; $(RMF) intrange_dats.c
cleanall:: ; $(RMF) intrange.exe

all:: mutailrec
mutailrec: mutailrec.exe
mutailrec.exe: mutailrec_dats.c ;   $(CC) -I$(PATSHOMEQ) -I$(PATSHOMEQ)/ccomp/runtime -o $@ $<
mutailrec_dats.c: mutailrec.dats ;   $(PATSOPT) -IATS$(PATSHOMEQ)/contrib --output mutailrec_dats.c --dynamic mutailrec.dats
clean:: ; $(RMF) mutailrec_dats.o
clean:: ; $(RMF) mutailrec_dats.c
cleanall:: ; $(RMF) mutailrec.exe

all:: revarr
revarr: revarr.exe
revarr.exe: revarr_dats.c ;   $(CC) -I$(PATSHOMEQ) -I$(PATSHOMEQ)/ccomp/runtime -o $@ $<
revarr_dats.c: revarr.dats ;   $(PATSOPT) -IATS$(PATSHOMEQ)/contrib --output revarr_dats.c --dynamic revarr.dats
clean:: ; $(RMF) revarr_dats.o
clean:: ; $(RMF) revarr_dats.c
cleanall:: ; $(RMF) revarr.exe

all:: sumodd
sumodd: sumodd.exe
sumodd.exe: sumodd_dats.c ;   $(CC) -I$(PATSHOMEQ) -I$(PATSHOMEQ)/ccomp/runtime -o $@ $<
sumodd_dats.c: sumodd.dats ;   $(PATSOPT) -IATS$(PATSHOMEQ)/contrib --output sumodd_dats.c --dynamic sumodd.dats
clean:: ; $(RMF) sumodd_dats.o
clean:: ; $(RMF) sumodd_dats.c
cleanall:: ; $(RMF) sumodd.exe

all:: strprefix
strprefix: strprefix.exe
strprefix.exe: strprefix_dats.c ;   $(CC) -I$(PATSHOMEQ) -I$(PATSHOMEQ)/ccomp/runtime -o $@ $<
strprefix_dats.c: strprefix.dats ;   $(PATSOPT) -IATS$(PATSHOMEQ)/contrib --output strprefix_dats.c --dynamic strprefix.dats
clean:: ; $(RMF) strprefix_dats.o
clean:: ; $(RMF) strprefix_dats.c
cleanall:: ; $(RMF) strprefix.exe

all:: tally
tally: tally.exe
tally.exe: tally_dats.c ;   $(CC) -I$(PATSHOMEQ) -I$(PATSHOMEQ)/ccomp/runtime -o $@ $<
tally_dats.c: tally.dats ;   $(PATSOPT) -IATS$(PATSHOMEQ)/contrib --output tally_dats.c --dynamic tally.dats
clean:: ; $(RMF) tally_dats.o
clean:: ; $(RMF) tally_dats.c
cleanall:: ; $(RMF) tally.exe

all:: temp
temp: temp.exe
temp.exe: temp_dats.c ;   $(CC) -I$(PATSHOMEQ) -I$(PATSHOMEQ)/ccomp/runtime -o $@ $<
temp_dats.c: temp.dats ;   $(PATSOPT) -IATS$(PATSHOMEQ)/contrib --output temp_dats.c --dynamic temp.dats
clean:: ; $(RMF) temp_dats.o
clean:: ; $(RMF) temp_dats.c
cleanall:: ; $(RMF) temp.exe

all:: test01
test01: test01.exe
test01.exe: test01_dats.c ;   $(CC) -DATS_MEMALLOC_LIBC -I$(PATSHOMEQ) -I$(PATSHOMEQ)/ccomp/runtime -o $@ $<
test01_dats.c: test01.dats ;   $(PATSOPT) -IATS$(PATSHOMEQ)/contrib --output test01_dats.c --dynamic test01.dats
clean:: ; $(RMF) test01_dats.o
clean:: ; $(RMF) test01_dats.c
cleanall:: ; $(RMF) test01.exe

######

clean:: ; $(RMF) *~
clean:: ; $(RMF) *_?ats.o *_?ats.c
clean:: ; $(RMF) *_atxt.txt
clean:: ; $(RMF) *_atxt.dats
clean:: ; $(RMF) Makefile.exe

cleanall:: clean

###### end of [Makefile] ######
