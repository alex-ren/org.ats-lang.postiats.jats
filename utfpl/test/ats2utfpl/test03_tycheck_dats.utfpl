fun qq_62 = lam (P2Tann<x_63:_:t@ype>) = 
  <D2EannSeff>(3:_:t@ype)

ty_752

DCKfun foo_2554:_:type

DCKval vv_2555:_:t@ype

implement foo_2554:_:type = lamSta. lamSta. lam (P2Tann<x_64:_:type>, P2Tann<y_65:_:t@ype>) = 
  <fun>
  <D2EannSeff>(3:_:t@ype)

DCKfun ddd1_2556:_:type

implement ddd1_2556:_:type = lamSta. lam (P2Tann<xs_66:_:type>) = 
  <fun>
  <D2EannSeff>(3:_:t@ype)

fun list_add_67 = lamSta. lam (P2Tann<xs_68:_:type>) = 
  <D2EannSeff>(3:_:t@ype)

fun qq1_69 = lam (P2Tann<x_70:_:t@ype>) = 
  <clo_ref>
  <D2EannSeff>(3:_:t@ype)

propy_753

prfun qq2_71 = lamSta. lamMet. lam (P2Tann<x_72:_:prop>) = 
  <D2EannSeff>(3:_:t@ype)

val P2Tann<vv2_73:_:t@ype> = 1:_:t@ype

implement vv_2555:_:t@ype = 3:_:t@ype

fun foo3_74 = lam (P2Tann<x_75:_:type>) = 
  <D2EannSeff>((3):_:type)

fun foo4_76 = lam (P2Tann<x_77:_:t@ype>) = 
  <D2EannSeff>(3:_:t@ype)

fun foo5_78 = lamSta. lam (P2Tann<x_79:_:t@ype>) = 
  <D2EannSeff>(x_79:_:t@ype)

DCKfun foo6_2557:_:type

implement foo6_2557:_:type = lam (P2Tann<x_80:_:t@ype>) = 
  <fun>
  <D2EannSeff>(3:_:t@ype)

fun foo7_81 = lam (P2Tann<x_82:_:t@ype>) = 
  <D2EannSeff>(let
    fun goo1_83 = lam (P2Tann<y_84:_:t@ype>) = 
      <D2EannSeff>(3:_:t@ype)
  in
    x_82
  end:_:t@ype)

fun foo8_85 = lam (P2Tann<xs_86:_:type>) = 
  <D2EannSeff>(3:_:t@ype)

DCKfun foo9_2558:_:type

DCKfun foo10_2559:_:type

fun foo11_87 = lamSta. lamSta. lamMet. lam () = 
  <D2EannSeff>(3:_:t@ype)

datatype(0)mylist_754

fun foo13_88 = lam (P2Tann<x_89:_:t@ype>) = 
  <clo_ref>
  <D2EannSeff>(3:_:t@ype)

fun foo14_90 = lam (P2Tann<x_91:_:t@ype>) = 
  <D2EannSeff>(3:_:t@ype)

fun foo15_92 = lamSta. lamSta. lam () = 
  <D2EannSeff>(3:_:t@ype)

fun foo16_93 = lam (P2Tann<x_94:_:t@ype>, P2Tann<f_95:_:type>) = 
  <D2EannSeff>(f_95 ((3), (4)):_:t@ype)

fun foo18_96 = lam () = 
  <D2EannSeff>(D2Esym<+> (1, 2):_:t@ype)