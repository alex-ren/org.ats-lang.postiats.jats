=======================================================
Assertion: main() deadlockfree
********Verification Result********
The Assertion (main() deadlockfree) is VALID.

********Verification Setting********
Admissible Behavior: All
Search Engine: Shortest Witness Trace using Breadth First Search
System Abstraction: False


********Verification Statistics********
Visited States:28346
Total Transitions:70838
Time Used:6.1458546s
Estimated Memory Used:46100.48KB


=======================================================
Assertion: main() |= G sys_assertion
********Verification Result********
The Assertion (main() |= G sys_assertion) is NOT valid.
A counterexample is presented as follows.
<init -> main_init -> main41_id_s1.0 -> dataslots_create_63_s1.0 -> loop_69_s1.0 -> [if(sys_gstack.frame_get_bool(0, 0, 4))] -> loop_69_s2.0 -> loop_69_s3.0 -> loop_69_s1.0 -> [if!(sys_gstack.frame_get_bool(0, 0, 4))] -> dataslots_create_63_s2.0 -> main41_id_s2.0 -> sys_ch_sch.1.10.0 -> τ -> thread_init -> [if!((10 == 9))] -> [if((10 == 10))] -> sys_ch_sch.2.9.0 -> τ -> loop_reader_112_s1.1 -> thread_init -> [if((9 == 9))] -> loop_writer_110_s1.2 -> write_98_s1.2 -> write_98_s2.2 -> write_98_s3.2 -> mc_acquire_ownership_89_s1.2 -> write_98_s4.2 -> dataslots_update_75_s1.2 -> dataslots_update_75_s2.2 -> dataslots_update_75_s3.2 -> write_98_s5.2 -> mc_release_ownership_92_s1.2 -> write_98_s6.2 -> write_98_s7.2 -> read_104_s1.1 -> read_104_s2.1 -> loop_writer_110_s2.2 -> loop_writer_110_s1.2 -> write_98_s1.2 -> write_98_s2.2 -> write_98_s3.2 -> mc_acquire_ownership_89_s1.2 -> write_98_s4.2 -> dataslots_update_75_s1.2 -> dataslots_update_75_s2.2 -> dataslots_update_75_s3.2 -> write_98_s5.2 -> mc_release_ownership_92_s1.2 -> write_98_s6.2 -> write_98_s7.2 -> loop_writer_110_s2.2 -> loop_writer_110_s1.2 -> write_98_s1.2 -> read_104_s3.1 -> read_104_s4.1 -> mc_acquire_ownership_89_s1.1 -> write_98_s2.2 -> write_98_s3.2 -> mc_acquire_ownership_89_s1.2>

********Verification Setting********
Admissible Behavior: All
Method: Refinement Based Safety Analysis using BFS - The LTL formula is a safety property!
System Abstraction: False


********Verification Statistics********
Visited States:5797
Total Transitions:13123
Time Used:1.1319361s
Estimated Memory Used:25300.992KB


