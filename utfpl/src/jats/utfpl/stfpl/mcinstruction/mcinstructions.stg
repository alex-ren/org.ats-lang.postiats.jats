group mcinstructions;

prog_st(fun_defs, main_inss) ::= <<
<fun_defs; separator="\n\n">

fun main0 () =
  <main_inss; separator="\n">
>>

MCDefFunGroup_st(fun_defs, fun_lab) ::= <<
<fun_lab> <fun_defs; separator="\nand\n">
>>

MCDefFun_st(name, paras, clo_info, ret_type, body) ::= <<
<name> (<paras; separator=", ">):\<<clo_info>\> <ret_type> =
  <body; separator="\n">
>>

MCInsCall_st(ret, funname, args) ::= <<
<ret> = <funname>(<args; separator=", ">);
>>

MCInsGetEleFromEnv(ret, envname, index) ::= <<
<ret> = sys_get_element(<envname>, <index>);
>>

MCInsCond_st(holder, cond, tb, fb) ::= <<
<if(holder)><holder> = <endif>if (<cond>) then
    <tb; separator = "\n">
else
    <fb; separator = "\n">
>>

MCInsClosure_st(holder, fun, env) ::= <<
<holder> = form_closure(<fun>, <env>)
>>

MCInsFormEnv_st(holder, eles) ::= <<
<holder> = form_env(<eles; separator=", ">)
>>

MCInsPatLabDecompose_st(holder, v, index) ::= <<
<holder> = pattern_get_index (<v>, <index>);
>>


  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
